{"version":3,"file":"static/js/213.af32db50.chunk.js","mappings":"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","sources":["HOC/Redirect.tsx","webpack://socialnetwork/./src/components/Messenger/Messenger.module.css?367c","webpack://socialnetwork/./src/components/Messenger/Dialogues/Dialogs.module.css?74a2","webpack://socialnetwork/./src/components/Messenger/Dialogues/Dialog/Dialog.module.css?b4f1","components/Messenger/Dialogues/Dialog/Dialog.tsx","components/Messenger/Dialogues/Dialogs.tsx","webpack://socialnetwork/./src/components/Messenger/Messages/Messages.module.css?f897","webpack://socialnetwork/./src/components/Messenger/Messages/Message/Message.module.css?d22c","components/Messenger/Messages/Message/Message.tsx","components/Messenger/Messages/TextareaFormMessage/TextareaFormMessages.tsx","components/Messenger/Messages/Messages.tsx","Redux/selectors/messengerPageSelectors.ts","components/Messenger/Messenger.tsx","components/Messenger/MessengerContainer.tsx","webpack://socialnetwork/./src/components/Messenger/Messages/TextareaFormMessage/TextareaFormMessages.module.css?d174"],"sourcesContent":["import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {getIsAuthSelector} from \"../Redux/selectors/authSelectors\";\r\n\r\n\r\nexport const WithAuthRedirectComponent= (Component: any ) => {\r\n\r\n    const Redirect:React.FC = React.memo((props) => {\r\n\r\n        const isAuth = useSelector(getIsAuthSelector);\r\n\r\n        if (!isAuth) return <Navigate to='/login' />\r\n\r\n        return <Component {...props} />\r\n    });\r\n\r\n    return Redirect\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"messenger\":\"Messenger_messenger__G15w7\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__7Qw1s\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogues_items\":\"Dialog_dialogues_items__kA1iW\",\"dialog\":\"Dialog_dialog__DMVML\",\"active_link\":\"Dialog_active_link__7dsLh\",\"dialogAva\":\"Dialog_dialogAva__-oU27\"};","import React from \"react\";\r\nimport mod from \"./Dialog.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userDefaultFoto from \"../../../../assets/images/userDefaultAvatar.webp\"\r\nimport {InStateDialogsType} from \"../../../../types/types\";\r\n\r\n\r\ntype PropsType = {\r\n    dialogs: Array<InStateDialogsType>\r\n};\r\n\r\n\r\nconst Dialog: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    return (\r\n        <div className={mod.dialogues_items}>\r\n            {\r\n                props.dialogs.map(dialog => <span key={dialog.id}>\r\n            <div className={mod.dialog}>\r\n                <NavLink to={\"/messenger/id\" + dialog.name} className={SelectedLink => SelectedLink.isActive ? mod.active_link : mod.dialog}>\r\n                    <img className={mod.dialogAva}\r\n                         src={dialog.avatarUrl != null\r\n                             ? dialog.avatarUrl\r\n                             : userDefaultFoto}\r\n                         alt=\"avatarUser\"/>\r\n                    {dialog.name}\r\n                </NavLink>\r\n            </div>\r\n            </span>\r\n                )}\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\nexport default Dialog;","import React from \"react\";\r\nimport mod from \"./Dialogs.module.css\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport {InStateDialogsType} from \"../../../types/types\";\r\n\r\n\r\ntype PropsType = {\r\n    dialogs: Array<InStateDialogsType>\r\n};\r\n\r\n\r\nconst Dialogs: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    return (\r\n        <div className={mod.dialogs}>\r\n            <Dialog dialogs={props.dialogs}/>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nexport default Dialogs;","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Messages_messages__O1hh2\",\"messages_items\":\"Messages_messages_items__OafCG\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__NI3Wf\"};","import React from \"react\";\r\nimport mod from \"./Message.module.css\";\r\nimport {inStateMessagesType} from \"../../../../types/types\";\r\n\r\n\r\ntype PropsType = {\r\n    messages: Array<inStateMessagesType>,\r\n};\r\n\r\n\r\nconst Message: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                props.messages.map(m => <div className={mod.message} key={m.id}>\r\n                    <div>{m.message}</div>\r\n                </div>)\r\n            }\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Message;","import React from \"react\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport mod from \"./TextareaFormMessages.module.css\";\r\n\r\n\r\ntype PropsType = {\r\n    onAddMessageClick: (newMessageText: string) => void,\r\n};\r\n\r\ntype TextareaFormMessagesType = {\r\n    newMessageText: string,\r\n};\r\n\r\nconst TextareaFormMessages: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const initialValues: TextareaFormMessagesType = {\r\n        newMessageText: \"\",\r\n    };\r\n\r\n    const addMessage = (newMessageText: string) => {\r\n        props.onAddMessageClick(newMessageText)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={(values, onSubmitProps) => {\r\n                    addMessage(values.newMessageText);\r\n                    onSubmitProps.resetForm()\r\n                }}>\r\n\r\n                <Form>\r\n                    <div className={mod.form}>\r\n                        <label htmlFor=\"textarea\"/>\r\n                        <Field className={mod.areatext}\r\n                               name=\"newMessageText\"\r\n                               id=\"textarea\"\r\n                               placeholder=\"Enter your post\"/>\r\n                        {/*<ErrorMessage name=\"textarea\">*/}\r\n                        {/*    {errorMsg => <div className={mod.formErrors}>{errorMsg}</div>}*/}\r\n                        {/*</ErrorMessage>*/}\r\n\r\n                        <button className={mod.button}\r\n                                type=\"submit\">Submit\r\n                        </button>\r\n                    </div>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nexport default TextareaFormMessages;\r\n","import React from \"react\";\r\nimport mod from \"./Messages.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport TextareaFormMessages from \"./TextareaFormMessage/TextareaFormMessages\";\r\nimport {inStateMessagesType} from \"../../../types/types\";\r\n\r\n\r\ntype PropsType = {\r\n    messages: Array<inStateMessagesType>,\r\n    onAddMessageClick: (newMessageText: string) => void\r\n};\r\n\r\n\r\nconst Messages: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={mod.messages}>\r\n                <div className={mod.messages_items}>\r\n                    <Message messages={props.messages}/>\r\n                </div>\r\n            </div>\r\n            <TextareaFormMessages onAddMessageClick={props.onAddMessageClick} />\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default Messages;","import {createSelector} from \"reselect\";\r\nimport {AppStateType} from \"../reduxStore\";\r\n\r\n\r\nconst getMessagesBasicSelector = (state: AppStateType) => {\r\n    return state.messengerPage.messages;\r\n};\r\n\r\nexport const getMessagesSelector = createSelector(getMessagesBasicSelector,\r\n    (messages) => {\r\n        return messages;\r\n    });\r\n\r\n\r\nconst getDialogsBasicSelector = (state: AppStateType) => {\r\n    return state.messengerPage.dialogs;\r\n};\r\n\r\nexport const getDialogsSelector = createSelector(getDialogsBasicSelector,\r\n    (dialogs) => {\r\n        return dialogs;\r\n    });","import React from \"react\";\r\nimport mod from \"./Messenger.module.css\";\r\nimport Dialogs from \"./Dialogues/Dialogs\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getDialogsSelector, getMessagesSelector} from \"../../Redux/selectors/messengerPageSelectors\";\r\nimport {actions} from \"../../Redux/messengerPageReducer\";\r\nimport ErrorBoundary from \"../common/ErrorBoundary\";\r\nimport {ErrorMsg} from \"../common/ErrorMsg\";\r\n\r\n\r\nexport const Messenger: React.FC = React.memo((props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const messages = useSelector(getMessagesSelector);\r\n    const dialogs = useSelector(getDialogsSelector);\r\n\r\n    const onAddMessageClick = (newMessageText: string)=> {\r\n        dispatch(actions.addMessage(newMessageText))\r\n    };\r\n\r\n    return (\r\n        <ErrorBoundary ErrorComponent={ErrorMsg}>\r\n        <section className={mod.messenger}>\r\n            <Dialogs dialogs={dialogs} />\r\n            <Messages messages={messages}\r\n                      onAddMessageClick={onAddMessageClick}/>\r\n        </section>\r\n        </ErrorBoundary>\r\n    )\r\n});\r\n\r\n","import React from \"react\";\r\nimport {Messenger} from \"./Messenger\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirectComponent} from \"../../HOC/Redirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst MessengerContainer: React.FC = React.memo(() => {\r\n\r\n    return <Messenger/>\r\n});\r\n\r\nexport default compose<React.ComponentType>(connect())(WithAuthRedirectComponent(MessengerContainer));","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"TextareaFormMessages_form__jN3e-\",\"areatext\":\"TextareaFormMessages_areatext__vVlqj\",\"formErrors\":\"TextareaFormMessages_formErrors__GZa74\",\"button\":\"TextareaFormMessages_button__EoVWy\"};"],"names":["Component","React","props","className","mod","dialogs","map","dialog","to","name","SelectedLink","isActive","src","avatarUrl","userDefaultFoto","alt","id","messages","m","message","initialValues","newMessageText","onSubmit","values","onSubmitProps","onAddMessageClick","resetForm","htmlFor","placeholder","type","getMessagesSelector","createSelector","state","messengerPage","getDialogsSelector","Messenger","dispatch","useDispatch","useSelector","ErrorBoundary","ErrorComponent","ErrorMsg","actions","MessengerContainer","compose","connect","getIsAuthSelector"],"sourceRoot":""}