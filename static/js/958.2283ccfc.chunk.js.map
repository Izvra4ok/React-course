{"version":3,"file":"static/js/958.2283ccfc.chunk.js","mappings":"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","sources":["HOC/Redirect.jsx","webpack://socialnetwork/./src/components/Friends/Friends.module.css?cf9f","webpack://socialnetwork/./src/components/Friends/FriendOnline/FriendOnline.module.css?9055","webpack://socialnetwork/./src/components/Friends/FriendAva/FriendAva.module.css?e9c4","components/Friends/FriendAva/FriendAva.jsx","components/Friends/FriendOnline/FriendOnline.jsx","components/Friends/FriendOnline/FriendOnlineContainer.jsx","webpack://socialnetwork/./src/components/Friends/Friend/Friend.module.css?43fb","components/Friends/Friend/Friend.jsx","components/Friends/Friend/FriendAllContainer.jsx","components/Friends/Friends.jsx","components/Friends/FriendsContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\n\r\nexport const WithAuthRedirectComponent = (Component) => {\r\n    const Redirect = (props) => {\r\n        if (!props.isAuth) return <Navigate to='/login' />\r\n        return <Component {...props} />\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(Redirect)\r\n    \r\n}\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})","// extracted by mini-css-extract-plugin\nexport default {\"friends\":\"Friends_friends__D+0pj\",\"friends_available\":\"Friends_friends_available__y4S-O\",\"active_link\":\"Friends_active_link__7w6Kv\"};","// extracted by mini-css-extract-plugin\nexport default {\"about_friend\":\"FriendOnline_about_friend__XzjvW\",\"users_avaButton\":\"FriendOnline_users_avaButton__OeO1U\",\"button\":\"FriendOnline_button__EMC7x\",\"active_link\":\"FriendOnline_active_link__Erjlb\",\"friend_name\":\"FriendOnline_friend_name__hIijs\",\"friend_info\":\"FriendOnline_friend_info__92KPw\",\"friend_links\":\"FriendOnline_friend_links__rSpPk\",\"friend_link\":\"FriendOnline_friend_link__yTrgJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"friend_avatar\":\"FriendAva_friend_avatar__7aoRb\"};","import React from \"react\";\r\nimport mod from \"./FriendAva.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userDefaultFoto from \"../../../assets/images/userDefaultAvatar.webp\";\r\n\r\n\r\nconst FriendAva = (props) => {\r\n\r\n    let url = \"id\" + props.first + props.last;\r\n\r\n    return (\r\n            <NavLink to={url}>\r\n                <img\r\n                     src={props.avatar !=null\r\n                         ? props.avatar\r\n                         : userDefaultFoto}\r\n                    className={mod.friend_avatar}\r\n                    alt=\"friend_avatar\"/>\r\n            </NavLink>\r\n    );\r\n};\r\n\r\nexport default FriendAva;\r\n","import React from \"react\";\r\nimport mod from \"./FriendOnline.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport FriendAva from \"../FriendAva/FriendAva\"\r\n\r\n\r\nconst FriendOnline = (props) => {\r\n\r\n    let SelectedLink = () => {\r\n        return SelectedLink => SelectedLink.isActive ? mod.active_link : mod.friend_name\r\n    };\r\n\r\n    return <div>\r\n            {\r\n                props.online.map(fr => <div className={mod.about_friend} key={fr.id}>\r\n                        <FriendAva avatar={fr.avatarUrl}\r\n                                   first={fr.first}\r\n                                   last={fr.last}/>\r\n                        <div>\r\n                            <div className={mod.friend_name}>\r\n                                <NavLink to={\"id\" + fr.first + fr.last} className={SelectedLink()}>\r\n                                    {fr.first} {fr.last}\r\n                                </NavLink>\r\n                            </div>\r\n                            <div className={mod.friend_info}>\r\n                                {fr.age} years old, from {fr.location.country} {fr.location.city}\r\n                            </div>\r\n                            <div className={mod.friend_links}>\r\n                                {props.ava}\r\n                                <span>\r\n                        <NavLink to={\"write\" + fr.first + fr.last} className={mod.friend_link}>Write message\r\n                        </NavLink>\r\n                    </span>\r\n                                <span>\r\n                        <NavLink to={\"call\" + fr.first + fr.last} className={mod.friend_link}>\r\n                            Call\r\n                        </NavLink>\r\n                    </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n};\r\n\r\nexport default FriendOnline;\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport FriendOnline from \"./FriendOnline\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass FriendOnlineContainer extends React.Component {\r\n\r\n    render() {\r\n        return <FriendOnline online={this.props.online}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        online: state.friendsPage.online\r\n    }\r\n};\r\n\r\n\r\nexport default compose(connect(mapStateToProps))(FriendOnlineContainer)\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"about_friend\":\"Friend_about_friend__0lOW5\",\"users_avaButton\":\"Friend_users_avaButton__pknNp\",\"button\":\"Friend_button__qe7Sx\",\"active_link\":\"Friend_active_link__kI+pW\",\"friend_name\":\"Friend_friend_name__E28Vo\",\"friend_info\":\"Friend_friend_info__sw8Vp\",\"friend_links\":\"Friend_friend_links__9UzVZ\",\"friend_link\":\"Friend_friend_link__27EyH\"};","import React from \"react\";\r\nimport mod from \"./Friend.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport FriendAva from \"../FriendAva/FriendAva\"\r\n\r\n\r\nconst Friend = (props) => {\r\n\r\n    let SelectedLink = () => {\r\n        return SelectedLink => SelectedLink.isActive ? mod.active_link : mod.friend_name\r\n    };\r\n\r\n    return (<div>\r\n            {\r\n                props.allfriends.map(fr => <div className={mod.about_friend} key={fr.id}>\r\n                        <div className={mod.friend_avaButton}>\r\n                            <FriendAva avatar={fr.avatarUrl}\r\n                                       first={fr.first}\r\n                                       last={fr.last}/>\r\n                            <NavLink to={\"id\" + fr.first + fr.last} className={SelectedLink()}>\r\n                                <div>\r\n                                    {fr.followed\r\n                                        ? <button className={mod.button}\r\n                                                  onClick={() => props.unfollowFriends(fr.id)}>UNFOLLOW</button>\r\n                                        : <button className={mod.button}\r\n                                                  onClick={() => props.followFriends(fr.id)}>FOLLOW</button>\r\n                                    }\r\n                                </div>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            <div className={mod.friend_name}>\r\n                                <NavLink to={\"id\" + fr.first + fr.last} className={SelectedLink()}>\r\n                                    {fr.first} {fr.last}\r\n                                </NavLink>\r\n                            </div>\r\n                            <div className={mod.friend_info}>\r\n                                {fr.age} years old, from {fr.location.country} {fr.location.city}\r\n                            </div>\r\n                            <div className={mod.friend_links}>\r\n                                {props.ava}\r\n                                <span>\r\n                        <NavLink to={\"write\" + fr.first + fr.last} className={mod.friend_link}>Write message\r\n                        </NavLink>\r\n                                </span>\r\n                                <span>\r\n                        <NavLink to={\"call\" + fr.first + fr.last} className={mod.friend_link}>\r\n                            Call\r\n                        </NavLink>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Friend;\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Friend from \"./Friend\";\r\nimport {followFriends, unfollowFriends} from \"../../../Redux/friendsPageReducer\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass FriendAllContainer extends React.Component {\r\n    render() {\r\n        return <Friend allfriends={this.props.allfriends}\r\n                       followFriends={this.props.followFriends}\r\n                       unfollowFriends={this.props.unfollowFriends}/>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n\r\n        allfriends: state.friendsPage.allfriends\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default compose(connect(mapStateToProps,{followFriends,unfollowFriends}))(FriendAllContainer)\r\n","import React from \"react\";\r\nimport mod from \"./Friends.module.css\";\r\nimport {NavLink, Route, Routes} from \"react-router-dom\";\r\nimport FriendOnlineContainer from \"./FriendOnline/FriendOnlineContainer\";\r\nimport FriendAllContainer from \"./Friend/FriendAllContainer\";\r\n\r\n\r\nconst Friends = (props) => {\r\n\r\n    let SelectedLink = () => {\r\n        return SelectLink => SelectLink.isActive ? mod.active_link : mod.friends_available};\r\n\r\n    return (\r\n        <section className={mod.all_friends}>\r\n        <div className={mod.friends}>\r\n            <NavLink to={\"online\"} className={SelectedLink()}>\r\n                <div className={mod.friends_available}>\r\n                    Online friends\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to={\"all\"} className={SelectedLink()}>\r\n                <div className={mod.friends_available}>\r\n                    All friends\r\n                </div>\r\n            </NavLink>\r\n\r\n        </div>\r\n            <Routes>\r\n                <Route path=\"online/*\"\r\n                       element={<FriendOnlineContainer />}>\r\n                </Route>\r\n            </Routes>\r\n            <Routes>\r\n                <Route path=\"all/*\"\r\n                       element={<FriendAllContainer/>}>\r\n                </Route>\r\n            </Routes>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Friends;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Friends from \"./Friends\";\r\nimport {WithAuthRedirectComponent} from \"../../HOC/Redirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst FriendsContainer = (props) => {\r\n\r\n        return <Friends/>\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({});\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {}),WithAuthRedirectComponent)(FriendsContainer)\r\n"],"names":["WithAuthRedirectComponent","Component","connect","mapStateToPropsForRedirect","props","isAuth","to","state","auth","url","first","last","src","avatar","userDefaultFoto","className","mod","alt","online","map","fr","avatarUrl","SelectedLink","isActive","age","location","country","city","ava","id","FriendOnlineContainer","this","React","compose","friendsPage","allfriends","followed","onClick","unfollowFriends","followFriends","FriendAllContainer","SelectLink","path","element"],"sourceRoot":""}