{"version":3,"file":"static/js/371.bb9c5138.chunk.js","mappings":"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","sources":["HOC/Redirect.jsx","webpack://socialnetwork/./src/components/Messenger/Messenger.module.css?367c","webpack://socialnetwork/./src/components/Messenger/Dialogues/Dialogs.module.css?74a2","webpack://socialnetwork/./src/components/Messenger/Dialogues/Dialog/Dialog.module.css?b4f1","components/Messenger/Dialogues/Dialog/Dialog.tsx","components/Messenger/Dialogues/Dialogs.tsx","webpack://socialnetwork/./src/components/Messenger/Messages/Messages.module.css?f897","webpack://socialnetwork/./src/components/Messenger/Messages/Message/Message.module.css?d22c","components/Messenger/Messages/Message/Message.tsx","webpack://socialnetwork/./src/components/Messenger/Messages/TextareaFormMessage/TextareaFormMessages.module.css?d174","components/Messenger/Messages/TextareaFormMessage/TextareaFormMessages.tsx","components/Messenger/Messages/Messages.tsx","components/Messenger/Messenger.tsx","Redux/selectors/messengerPageSelectors.ts","components/Messenger/MessengerContainer.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\n\r\nexport const WithAuthRedirectComponent = (Component) => {\r\n    const Redirect = (props) => {\r\n        if (!props.isAuth) return <Navigate to='/login' />\r\n        return <Component {...props} />\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(Redirect)\r\n    \r\n}\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})","// extracted by mini-css-extract-plugin\nexport default {\"messenger\":\"Messenger_messenger__2Ai5r\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__WLGek\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogues_items\":\"Dialog_dialogues_items__YHqB4\",\"dialog\":\"Dialog_dialog__S2KMw\",\"active_link\":\"Dialog_active_link__h9m7Z\",\"dialogAva\":\"Dialog_dialogAva__BuqhM\"};","import React from \"react\";\r\nimport mod from \"./Dialog.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userDefaultFoto from \"../../../../assets/images/userDefaultAvatar.webp\"\r\nimport {InStateDialogsType} from \"../../../../types/types\";\r\n\r\n\r\ntype PropsType = {\r\n    dialogs: Array<InStateDialogsType>\r\n};\r\n\r\n\r\nconst Dialog: React.FC<PropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={mod.dialogues_items}>\r\n            {\r\n                props.dialogs.map(dialog => <span key={dialog.id}>\r\n            <div className={mod.dialog}>\r\n                <NavLink to={\"/messenger/id\" + dialog.first + dialog.last} className={SelectedLink => SelectedLink.isActive ? mod.active_link : mod.dialog}>\r\n                    <img className={mod.dialogAva}\r\n                         src={dialog.avatarUrl != null\r\n                             ? dialog.avatarUrl\r\n                             : userDefaultFoto}\r\n                         alt=\"avatarUser\"/>\r\n                    {dialog.first} {dialog.last}\r\n                </NavLink>\r\n            </div>\r\n            </span>\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Dialog;","import React from \"react\";\r\nimport mod from \"./Dialogs.module.css\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport {InStateDialogsType} from \"../../../types/types\";\r\n\r\n\r\ntype PropsType = {\r\n    dialogs: Array<InStateDialogsType>\r\n};\r\n\r\n\r\nconst Dialogs: React.FC<PropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={mod.dialogs}>\r\n            <Dialog dialogs={props.dialogs}/>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Dialogs;","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Messages_messages__FFZkS\",\"messages_items\":\"Messages_messages_items__3Sn9S\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__lBbwR\"};","import React from \"react\";\r\nimport mod from \"./Message.module.css\";\r\nimport {inStateMessagesType} from \"../../../../types/types\";\r\n\r\n\r\ntype PropsType = {\r\n    messages: Array<inStateMessagesType>,\r\n};\r\n\r\n\r\nconst Message: React.FC<PropsType> = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                props.messages.map(m => <div className={mod.message} key={m.id}>\r\n                    <div>{m.message}</div>\r\n                </div>)\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"TextareaFormMessages_form__uT0y6\",\"areatext\":\"TextareaFormMessages_areatext__l0Tsr\",\"formErrors\":\"TextareaFormMessages_formErrors__MGly+\",\"button\":\"TextareaFormMessages_button__6kvvM\"};","import React from \"react\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport mod from \"./TextareaFormMessages.module.css\";\r\n\r\n\r\ntype PropsType = {\r\n    onAddMessageClick: (newMessageText: string) => void,\r\n};\r\n\r\n\r\nconst TextareaFormMessages: React.FC<PropsType> = (props) => {\r\n\r\n    const initialValues = {\r\n        newMessageText: \"\",\r\n    };\r\n\r\n    const addMessage = (newMessageText: string) => {\r\n        props.onAddMessageClick(newMessageText)\r\n    };\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={(values, onSubmitProps) => {\r\n                    addMessage(values.newMessageText);\r\n                    onSubmitProps.resetForm()\r\n                }}>\r\n\r\n                <Form>\r\n                    <div className={mod.form}>\r\n                        <label htmlFor=\"textarea\"/>\r\n                        <Field className={mod.areatext}\r\n                               name=\"newMessageText\"\r\n                               id=\"textarea\"\r\n                               placeholder=\"Enter your post\"/>\r\n                        {/*<ErrorMessage name=\"textarea\">*/}\r\n                        {/*    {errorMsg => <div className={mod.formErrors}>{errorMsg}</div>}*/}\r\n                        {/*</ErrorMessage>*/}\r\n\r\n                        <button className={mod.button}\r\n                                type=\"submit\">Submit\r\n                        </button>\r\n                    </div>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default TextareaFormMessages;\r\n","import React from \"react\";\r\nimport mod from \"./Messages.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport TextareaFormMessages from \"./TextareaFormMessage/TextareaFormMessages\";\r\nimport {inStateMessagesType} from \"../../../types/types\";\r\n\r\n\r\ntype PropsType = {\r\n    messages: Array<inStateMessagesType>,\r\n    onAddMessageClick: (newMessageText: string) => void\r\n};\r\n\r\n\r\nconst Messages: React.FC<PropsType> = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={mod.messages}>\r\n                <div className={mod.messages_items}>\r\n                    <Message messages={props.messages}/>\r\n                </div>\r\n            </div>\r\n            <TextareaFormMessages onAddMessageClick={props.onAddMessageClick} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Messages;","import React from \"react\";\r\nimport mod from \"./Messenger.module.css\";\r\nimport Dialogs from \"./Dialogues/Dialogs\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport {InStateDialogsType, inStateMessagesType} from \"../../types/types\";\r\n\r\ntype PropsType = {\r\n    dialogs: Array<InStateDialogsType>,\r\n    messages: Array<inStateMessagesType>,\r\n    onAddMessageClick: (newMessageText: string) => void\r\n}\r\n\r\nconst Messenger: React.FC<PropsType> = (props) => {\r\n\r\n    return (\r\n        <section className={mod.messenger}>\r\n            <Dialogs dialogs={props.dialogs} />\r\n            <Messages messages={props.messages}\r\n                      onAddMessageClick={props.onAddMessageClick}/>\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default Messenger;","import {createSelector} from \"reselect\";\r\nimport {AppStateType} from \"../reduxStore\";\r\n\r\n\r\nconst getMessagesBasicSelector = (state: AppStateType) => {\r\n    return state.messengerPage.messages;\r\n};\r\n\r\nexport const getMessagesSelector = createSelector(getMessagesBasicSelector,\r\n    (messages) => {\r\n        return messages;\r\n    });\r\n\r\n\r\nconst getDialogsBasicSelector = (state: AppStateType) => {\r\n    return state.messengerPage.dialogs;\r\n};\r\n\r\nexport const getDialogsSelector = createSelector(getDialogsBasicSelector,\r\n    (dialogs) => {\r\n        return dialogs;\r\n    });","import React from \"react\";\r\nimport Messenger from \"./Messenger\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirectComponent} from \"../../HOC/Redirect\";\r\nimport {compose} from \"redux\";\r\nimport {getDialogsSelector, getMessagesSelector} from \"../../Redux/selectors/messengerPageSelectors\";\r\nimport {addMessage} from \"../../Redux/messengerPageReducer\";\r\nimport {AppStateType} from \"../../Redux/reduxStore\";\r\nimport {InStateDialogsType, inStateMessagesType} from \"../../types/types\";\r\n\r\n\r\ntype PropsType = {\r\n    addMessage: (newMessageText: string) => void,\r\n    messages: Array<inStateMessagesType>\r\n    dialogs: Array<InStateDialogsType>\r\n};\r\n\r\nconst MessengerContainer: React.FC<PropsType> = (props) => {\r\n\r\n    let onAddMessageClick = (newMessageText: string)=> {\r\n        props.addMessage(newMessageText);\r\n    };\r\n\r\n    return <Messenger messages={props.messages}\r\n                      dialogs={props.dialogs}\r\n                      onAddMessageClick={onAddMessageClick}/>\r\n};\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n    messages: getMessagesSelector(state),\r\n    dialogs: getDialogsSelector(state),\r\n});\r\n\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps,\r\n    {addMessage}))(WithAuthRedirectComponent(MessengerContainer));"],"names":["Component","props","className","mod","dialogs","map","dialog","to","first","last","SelectedLink","isActive","src","avatarUrl","userDefaultFoto","alt","id","messages","m","message","initialValues","newMessageText","onSubmit","values","onSubmitProps","onAddMessageClick","resetForm","htmlFor","name","placeholder","type","mapStateToPropsForRedirect","state","isAuth","auth","getMessagesSelector","createSelector","messengerPage","getDialogsSelector","compose","connect","addMessage"],"sourceRoot":""}